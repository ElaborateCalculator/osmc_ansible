---
# tasks file for osmc
- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  become: True
- name: Update hosts file
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1'
    line: 127.0.1.1 {{ inventory_hostname }} {{ inventory_hostname_short }}
    owner: root 
    group: root 
    mode: 0644
  become: True
- name: Set passwords
  shell: echo {{ item }} | /usr/sbin/chpasswd
  with_items:
    - root:{{ root_pass }}
    - "{{ osmc_default_user }}:{{ osmc_pass }}"
  become: True
  no_log: True
- name:	Install packages
  apt:
    package: "{{ item }}"
    update_cache: yes
    cache_valid_time: 3600
  become: True
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  with_items:
    - krb5-config
    - krb5-user
    - ssh-krb5
    - screen
    - dselect
    - aptitude
    - sudo-ldap
    - python-openssl
    - joe
    - sssd 
    - sssd-ldap 
    - ldap-utils
    - sssd-tools
    - libnss-sss
    - libpam-sss
    - libsss-sudo
    - cracklib-runtime
    - nagios-nrpe-server
    - nagios-plugins
- name: Set automatic homedir creation
  lineinfile:
    path: /etc/pam.d/common-session
    line: session optional        pam_mkhomedir.so
    insertafter: '^session required.*pam_unix.so'
  become: True
- name: Install SSL cert
  copy:
    src: files/middleearth.crt
    dest: /etc/ssl/certs/middleearth.crt
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: True
- name: Rebuild SSL cert hashes
  command: /usr/bin/c_rehash /etc/ssl/certs
  become: True
- name: Install LDAP config
  template: 
    src: templates/ldap.conf.j2
    dest: /etc/ldap/ldap.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: True
- name: Install kerberos config
  template:
    src: templates/krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: True
- name: Remove old kerberos principal
  command: kadmin -w {{ krb_pass }} -p {{ krb_prin }} delprinc host/{{ inventory_hostname }}@{{ krb_realm }}
  ignore_errors: True
  become: True
- name: Create new kerberos principal
  command: kadmin -w {{ krb_pass }} -p {{ krb_prin }} addprinc -randkey host/{{ inventory_hostname }}@{{ krb_realm }}
  become: True
- name: Add kerberos key
  command: kadmin -w {{ krb_pass }} -p {{ krb_prin }} ktadd -k /etc/krb5.keytab host/{{ inventory_hostname }}@{{ krb_realm }}
  become: True
- name: Install sssd config
  template:
    src: templates/sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: 0600
    backup: yes
  become: True
- name: Restart sssd
  service:
    name: sssd
    state: restarted
  become: True
- name: Install sshd config
  copy:
    src: files/sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0644
    validate: /usr/sbin/sshd -t -f %s
    backup: yes
  become: True
- name: Restart sshd
  service:
    name: sshd
    state: restarted
  become: True
- name: Install nsswitch
  copy:
    src: files/nsswitch.conf
    dest: /etc/nsswitch.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: True
- name: Install nsswitch.middleearth
  copy:
    src: files/nsswitch.conf
    dest: /etc/nsswitch.conf
    owner: root
    group: root
    mode: 0644
  become: True
- name: Install NRPE cfg
  template: 
    src: templates/nrpe.cfg.j2
    dest: /etc/nagios/nrpe.cfg
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: True
- name: Install NRPE command file
  template:
    src: templates/fixed_commands.cfg.j2
    dest: /etc/nagios/nrpe.d/fixed_commands.cfg
    owner: root
    group: root
    mode: 0644
  become: True
- name: Restart nrpe
  service:
    name: nagios-nrpe-server
    state: restarted
  become: True
- name: Install kodi configs
  template: 
    src: files/{{ item }}
    dest: /home/osmc/.kodi/userdata/{{ item }}
    owner: osmc
    group: osmc
    mode: 0644
    backup: yes
  with_items:
    - advancedsettings.xml
    - sources.xml
- name: Restart kodi
  service:
    name: mediacenter
    state: restarted
  become: True
- name: Write MPG codec
  lineinfile:
    path: /boot/config.txt
    regexp: '^decode_MPG2'
    line: 'decode_MPG2={{ mpg_codec }}'
  become: True
- name: Write WVC codec
  lineinfile:
    path: /boot/config.txt
    regexp: '^decode_WVC1'
    line: 'decode_WVC1={{ wvc_codec }}'
  become: True
- name: Write CEC init ignore
  lineinfile:
    path: /boot/config.txt
    regexp: '^hdmi_ignore_cec_init'
    line: 'hdmi_ignore_cec_init=1'
  become: True
- name: Get latest version
  apt: 
    upgrade: dist
    update_cache: yes
    cache_valid_time: 3600
  become: True
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
- name: Reinstall nsswitch
  copy:
    src: files/nsswitch.conf
    dest: /etc/nsswitch.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: True
- name: Restart pi
  command: /sbin/shutdown -r +1
  async: 0
  poll: 0
  ignore_errors: true
- name: Wait for pi to finish rebooting
  local_action: wait_for 
    host: "{{ inventory_hostname }}" 
    search_regex: OpenSSH 
    port: 22
    timeout: 300
